local SwordModule = {}

function SwordModule:Initialize(tool)
	-- References
	local Tool = tool
	local Handle = Tool:WaitForChild("Handle")
	local Player = nil
	local Character = nil
	local Humanoid = nil
	local Torso = nil

	-- Constants and Variables
	local Mouse_Icon = "rbxasset://textures/GunCursor.png"
	local Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

	local DamageValues = {
		BaseDamage = 5,
		SlashDamage = 10,
		LungeDamage = 30
	}

	local Animations = {
		R15Slash = 522635514,
		R15Lunge = 522638767
	}

	local Damage = DamageValues.BaseDamage

	local Grips = {
		Up = CFrame.new(0, 0, -1.70000005, 0, 0, 1, 1, 0, 0, 0, 1, 0),
		Out = CFrame.new(0, 0, -1.70000005, 0, 1, 0, 1, -0, 0, 0, 0, -1)
	}

	local Sounds = {
		Slash = Handle:WaitForChild("SwordSlash"),
		Lunge = Handle:WaitForChild("SwordLunge"),
		Unsheath = Handle:WaitForChild("Unsheath")
	}

	local ToolEquipped = false
	local LastAttack = 0
	local Mouse = nil

	-- Services
	local Players = game:GetService("Players")
	local Debris = game:GetService("Debris")
	local RunService = game:GetService("RunService")

	-- Adjust particle emitters
	for _, v in pairs(Handle:GetChildren()) do
		if v:IsA("ParticleEmitter") then
			v.Rate = 20
		end
	end

	Tool.Grip = Grips.Up
	Tool.Enabled = true

	-- Helper Functions
	local function UpdateIcon()
		if Mouse then
			Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
		end
	end

	local function OnEquipped(ToolMouse)
		Mouse = ToolMouse
		UpdateIcon()
	end

	local function OnChanged(Property)
		if Property == "Enabled" then
			UpdateIcon()
		end
	end

	local function Create(ty)
		return function(data)
			local obj = Instance.new(ty)
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end
	end

	local function IsTeamMate(Player1, Player2)
		return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
	end

	local function UntagHumanoid(humanoid)
		for _, v in pairs(humanoid:GetChildren()) do
			if v:IsA("ObjectValue") and v.Name == "creator" then
				v:Destroy()
			end
		end
	end


	local function TagHumanoid(humanoid, player)
		UntagHumanoid(humanoid)
		local Creator_Tag = Instance.new("ObjectValue")
		Creator_Tag.Name = "creator"
		Creator_Tag.Value = player
		Debris:AddItem(Creator_Tag, 0.5)
		Creator_Tag.Parent = humanoid
	end


	local function CheckIfAlive()
		return Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent
	end

	local function Blow(Hit)
		if not Hit or not Hit.Parent or not CheckIfAlive() or not ToolEquipped then
			return
		end
		local RightArm = Character:FindFirstChild("Right Arm") or Character:FindFirstChild("RightHand")
		if not RightArm then
			return
		end
		local RightGrip = RightArm:FindFirstChild("RightGrip")
		if not RightGrip or (RightGrip.Part0 ~= Handle and RightGrip.Part1 ~= Handle) then
			return
		end
		local character = Hit.Parent
		if character == Character then
			return
		end
		local humanoid = character:FindFirstChildOfClass("Humanoid")
		if not humanoid or humanoid.Health == 0 then
			return
		end
		local hitPlayer = Players:GetPlayerFromCharacter(character)
		if hitPlayer and (hitPlayer == Player or IsTeamMate(Player, hitPlayer)) then
			return
		end

		local distance = (character.HumanoidRootPart.Position - Character.HumanoidRootPart.Position).magnitude
		if distance > 12 then
			return
		end

		UntagHumanoid(humanoid)
		TagHumanoid(humanoid, Player)
		humanoid:TakeDamage(Damage)
	end

	local function Attack()
		Damage = DamageValues.SlashDamage
		Sounds.Slash:Play()

		if Humanoid then
			if Humanoid.RigType == Enum.HumanoidRigType.R6 then
				local Anim = Instance.new("StringValue")
				Anim.Name = "toolanim"
				Anim.Value = "Slash"
				Anim.Parent = Tool
			elseif Humanoid.RigType == Enum.HumanoidRigType.R15 then
				local Anim = Tool:FindFirstChild("R15Slash")
				if Anim then
					local Track = Humanoid:LoadAnimation(Anim)
					Track:Play(0)
				end
			end
		end
	end

	local function Lunge()
		Damage = DamageValues.LungeDamage
		Sounds.Lunge:Play()

		if Humanoid then
			if Humanoid.RigType == Enum.HumanoidRigType.R6 then
				local Anim = Instance.new("StringValue")
				Anim.Name = "toolanim"
				Anim.Value = "Lunge"
				Anim.Parent = Tool
			elseif Humanoid.RigType == Enum.HumanoidRigType.R15 then
				local Anim = Tool:FindFirstChild("R15Lunge")
				if Anim then
					local Track = Humanoid:LoadAnimation(Anim)
					Track:Play(0)
				end
			end
		end

		wait(0.25)
		Tool.Grip = Grips.Out
		wait(0.75)
		Tool.Grip = Grips.Up
		Damage = DamageValues.SlashDamage
	end

	local function Activated()
		if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
			return
		end
		Tool.Enabled = false
		local currentTime = tick()
		if currentTime - LastAttack < 0.2 then
			Lunge()
		else
			Attack()
		end
		LastAttack = currentTime
		Damage = DamageValues.BaseDamage
		Tool.Enabled = true
	end

	local function Equipped()
		Character = Tool.Parent
		Player = Players:GetPlayerFromCharacter(Character)
		Humanoid = Character:FindFirstChildOfClass("Humanoid")
		Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("HumanoidRootPart")
		if not CheckIfAlive() then
			return
		end
		ToolEquipped = true
		Sounds.Unsheath:Play()
	end

	local function Unequipped()
		Tool.Grip = Grips.Up
		ToolEquipped = false
	end

	-- Connect Events
	Tool.Activated:Connect(Activated)
	Tool.Equipped:Connect(Equipped)
	Tool.Unequipped:Connect(Unequipped)
	Handle.Touched:Connect(Blow)
	Tool.Equipped:Connect(OnEquipped)
	Tool.Changed:Connect(OnChanged)

	-- Preload Animations
	local BaseUrl = "rbxassetid://"
	local AnimationsFolder = Instance.new("Folder")
	AnimationsFolder.Name = "Animations"
	AnimationsFolder.Parent = Tool

	local SlashAnim = Create("Animation")({
		Name = "R15Slash",
		AnimationId = BaseUrl .. Animations.R15Slash,
		Parent = AnimationsFolder
	})

	local LungeAnim = Create("Animation")({
		Name = "R15Lunge",
		AnimationId = BaseUrl .. Animations.R15Lunge,
		Parent = AnimationsFolder
	})
end

return SwordModule
